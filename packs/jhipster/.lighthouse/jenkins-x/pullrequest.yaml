apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          env:
          - name: _JAVA_OPTIONS
            value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true
              -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4
              -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
          - name: MAVEN_OPTS
            value: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=25
              -Dmaven.wagon.http.retryHandler.count=3
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/maven-java11/pullrequest.yaml@versionStream
          name: ""
          resources:
            requests:
              cpu: 400m
              memory: 512Mi
          volumeMounts:
          - mountPath: /root/.m2/
            name: maven-settings
          workingDir: /workspace/source
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone-pr.yaml@versionStream
          name: ""
          resources: {}
        - name: jx-variables
          resources: {}
        - name: build-set-version
          resources: {}
        - image: maven:3.6-openjdk-11
          name: jhipster-jdl
          resources: {}
          script: |
            #!/bin/sh
            #echo jhipster | sudo -S chmod -R +777 ./
            curl -fsSL https://deb.nodesource.com/setup_14.x | bash -
            apt-get install -y nodejs
            npm install -g generator-jhipster
            jhipster jdl jhipster.jdl --no-insight --force --skip-install
            cp kubernetes-helm/xxxxx-helm/templates/jwt-secret.yml "$(eval echo charts/*/templates/)"jwt-secret.yaml
            cat kubernetes-helm/xxxxx-helm/templates/_helpers.tpl >>  "$(eval echo charts/*/templates/_helpers.tpl)"
            cp kubernetes-helm/xxxxx-helm/requirements.yaml  "$(eval echo charts/*/)"requirements.yaml
            cp kubernetes-helm/xxxxx-helm/templates/xxxxx-deployment.yaml  "$(eval echo charts/*/)"deployment.yaml
            cp kubernetes-knative/xxxxx-knative/templates/xxxxx-service.yaml  "$(eval echo charts/*/)"ksvc.yaml
            cat kubernetes-helm/xxxxx-helm/values.yaml >> "$(eval echo charts/*/values.yaml)"
            sed -i '/namespace: /d' "$(eval echo charts/*/templates/)"jwt-secret.yaml
            sed -i 's/wwwww/"{{ requiredEnv "DOCKER_REGISTRY" }}/{{ requiredEnv "DOCKER_REGISTRY_ORG" }}/{{ requiredEnv "APP_NAME" }}"/g' "$(eval echo   charts/*/templates/)"*
            sed -i 's/xxxxx/{{ template "fullname" . }}/g' "$(eval echo charts/*/templates/)"*
            sed -i 's/yyyyy/{{ .Values.jxRequirements.ingress.namespaceSubDomain }}{{ .Values.jxRequirements.ingress.domain }}/g' "$(eval echo charts/*/ templates/)"*
            sed -i 's/zzzzz/{{ .Release.Namespace }}/g' "$(eval echo charts/*/templates/)"*
        - name: build-mvn-install
          resources: {}
        - name: check-registry
          resources: {}
        - name: build-container-build
          resources: {}
        - image: ghcr.io/jenkins-x-plugins/jx-preview:0.0.182
          name: promote-jx-preview
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            jx gitops helm build
            jx preview create
        volumes:
        - name: maven-settings
          secret:
            secretName: jenkins-maven-settings
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
