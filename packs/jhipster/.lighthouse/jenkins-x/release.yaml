apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          env:
          - name: _JAVA_OPTIONS
            value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true
              -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4
              -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
          - name: MAVEN_OPTS
            value: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=25
              -Dmaven.wagon.http.retryHandler.count=3
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/maven-java11/release.yaml@versionStream
          name: ""
          resources:
            requests:
              cpu: 400m
              memory: 512Mi
          volumeMounts:
          - mountPath: /root/.m2/
            name: maven-settings
          - mountPath: /root/.gnupg
            name: release-gpg
          - mountPath: /tekton/home/npm
            name: npmrc    
          workingDir: /workspace/source
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
          name: ""
          resources: {}
        - name: next-version
          resources: {}
        - name: jx-variables
          resources: {}
        - image: maven:3.6-openjdk-11
          name: jhipster-jdl
          resources: {}
          script: |
            #!/bin/sh
            #echo jhipster | sudo -S chmod -R +777 ./
            #exit 0
            curl -fsSL https://deb.nodesource.com/setup_14.x | bash -
            apt-get install -y nodejs
            npm install -g generator-jhipster
            jhipster jdl jhipster.jdl --no-insight --force --skip-install
            cp kubernetes-helm/xxxxx-helm/templates/jwt-secret.yml "$(eval echo charts/*/templates/)"jwt-secret.yaml
            #tail -n +2 kubernetes-helm/xxxxx-helm/templates/_helpers.tpl >>  "$(eval echo charts/*/templates/_helpers.tpl)"
            cp kubernetes-helm/xxxxx-helm/requirements.yaml  "$(eval echo charts/*/)"requirements.yaml
            cp kubernetes-helm/xxxxx-helm/templates/xxxxx-deployment.yml  "$(eval echo charts/*/templates/)"deployment.yaml
            #cp kubernetes-helm/xxxxx-helm/templates/xxxxx-ingress.yml  "$(eval echo charts/*/templates/)"ingress.yaml
            #cp kubernetes-helm/xxxxx-helm/templates/xxxxx-service.yml  "$(eval echo charts/*/templates/)"service.yaml
            #cp kubernetes-knative/xxxxx-knative/templates/xxxxx-service.yml  "$(eval echo charts/*/templates/)"ksvc.yaml
            cat kubernetes-helm/xxxxx-helm/values.yaml >> "$(eval echo charts/*/values.yaml)"
            sed -i '/namespace: /d' "$(eval echo charts/*/templates/)"jwt-secret.yaml
            #sed -i 's/"xxxxx/{{ template "fullname" . }}"/g' "$(eval echo charts/*/templates/_helpers.tpl)"
            sed -i 's/wwwww\/xxxxx/"{{ .Values.image.repository }}:{{ .Values.image.tag }}"/g' "$(eval echo   charts/*/templates/)"*
            sed -i 's/wwwww/"{{ .Values.jxRequirements.cluster.registry }}"/g' "$(eval echo   charts/*/templates/)"*
            sed -i 's/xxxxx/{{ template "fullname" . }}/g' "$(eval echo charts/*/templates/)"*
            sed -i '/- name: SPRING_DATASOURCE_USERNAME/{n;/value: {{ template "fullname" . }}/{s/{{ template "fullname" . }}/xxxxx/;}}' "$(eval echo charts/*/templates/       )"deployment.yaml
            sed -i 's/5432\/{{ template "fullname" . }}/5432\/xxxxx/;' "$(eval echo charts/*/templates/)"deployment.yaml
            sed -i 's/yyyyy/{{ .Release.Namespace }}/g' "$(eval echo charts/*/templates/)"*
            sed -i 's/zzzzz/{{ .Values.jxRequirements.ingress.namespaceSubDomain }}{{ .Values.jxRequirements.ingress.domain }}/g' "$(eval echo charts/*/templates/)"*
            apt-get install -y xmlstarlet
            xmlstarlet ed --inplace -N x=http://maven.apache.org/POM/4.0.0 -s '/x:project/x:profiles/x:profile/x:build/x:plugins/x:plugin/x:executions/x:execution[id="npm install"]/x:configuration' -t elem -n arguments -v 'install --registry http://verdaccio:4872' -d '/x:project/x:profiles/x:profile/x:build/x:plugins/x:plugin/x:executions/x:execution[id="npm install"]/x:configuration/x:arguments[position() != 1]' -u '/x:project/x:profiles/x:profile/x:build/x:plugins/x:plugin/x:executions/x:execution[id="npm install"]/x:configuration/x:arguments' -v 'install --registry http://verdaccio:4873' pom.xml
        - image: maven:3.6-openjdk-11
          name: build-mvn-deploy
          resources: {}
          script: |
            #!/usr/bin/env bash
            source .jx/variables.sh

            # modify the pom.xml
            echo "upgrading the pom to version $VERSION"
            mvn versions:set -DnewVersion=$VERSION

            mvn --no-transfer-progress clean deploy -DskipTests
        - name: check-registry
          resources: {}
        - name: build-container-build
          resources: {}
        - name: promote-changelog
          resources: {}
        - image: ghcr.io/jenkins-x/jx-boot:3.2.133
          name: promote-helm-release
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            #helm dependency update /workspace/source/charts/$REPO_NAME
            helm repo add test https://charts.helm.sh/stable
            #jx gitops helm build
            jx gitops helm release
        - name: promote-jx-promote
          resources: {}
        volumes:
        - name: maven-settings
          secret:
            secretName: jenkins-maven-settings
        - name: release-gpg
          secret:
            optional: true
            secretName: jenkins-release-gpg
        - name: npmrc
          secret:
              optional: true
              secretName: npmrc      
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
