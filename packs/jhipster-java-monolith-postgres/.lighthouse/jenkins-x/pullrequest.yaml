apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          env:
          - name: _JAVA_OPTIONS
            value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true
              -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4
              -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
          - name: MAVEN_OPTS
            value: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=25
              -Dmaven.wagon.http.retryHandler.count=3
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/maven-java11/pullrequest.yaml@versionStream
          name: ""
          resources:
            requests:
              cpu: 400m
              memory: 512Mi
          volumeMounts:
          - mountPath: /tekton/home/npm
            name: npmrc
          - mountPath: /root/.m2/
            name: maven-settings
          workingDir: /workspace/source
        steps:
        - envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
          name: git-clone
          resources: {}
          script: |
            #!/bin/sh
            export SUBDIR="source"
            echo "git cloning url: $REPO_URL version $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
            git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
            git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
            git config --global credential.helper store
            git clone $REPO_URL $SUBDIR
            cd $SUBDIR
            git fetch origin $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
            git checkout $(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
            git reset --hard $PULL_PULL_SHA
            echo "checked out revision: $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
            #! /bin/bash

            MESSAGE=$(git log -1 HEAD --pretty=format:%s)

            if [[ "$MESSAGE" == "chore: regenerated\n/pipeline cancel" ]]; then
            echo "already processed pullrequest; exit"
            echo "nothing to see here -- move along"
            exit 1
            else
            echo "not processed  -- continuing job"
            fi  
          workingDir: /workspace
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone-pr.yaml@versionStream
          name: git-merge
          resources: {}
        - name: jx-variables
          resources: {}
        - name: build-set-version
          resources: {}
        - image: maven:3.6-openjdk-11
          name: jhipster-jdl
          resources: {}
          script: |
            #!/bin/sh
            #echo jhipster | sudo -S chmod -R +777 ./
            #exit 0
            curl -fsSL https://deb.nodesource.com/setup_14.x | bash -
            apt-get install -y nodejs
            npm install -g generator-jhipster@7.0.1
            jhipster jdl jhipster.jdl --no-insight --force --skip-install
            cp kubernetes-helm/xxxxx-helm/templates/jwt-secret.yml "$(eval echo charts/*/templates/)"jwt-secret.yaml
            #tail -n +2 kubernetes-helm/xxxxx-helm/templates/_helpers.tpl >>  "$(eval echo charts/*/templates/_helpers.tpl)"
            cp kubernetes-helm/xxxxx-helm/requirements.yaml  "$(eval echo charts/*/)"requirements.yaml
            cp kubernetes-helm/xxxxx-helm/templates/xxxxx-deployment.yml  "$(eval echo charts/*/templates/)"deployment.yaml
            #cp kubernetes-helm/xxxxx-helm/templates/xxxxx-ingress.yml  "$(eval echo charts/*/templates/)"ingress.yaml
            #cp kubernetes-helm/xxxxx-helm/templates/xxxxx-service.yml  "$(eval echo charts/*/templates/)"service.yaml
            #cp kubernetes-knative/xxxxx-knative/templates/xxxxx-service.yml  "$(eval echo charts/*/templates/)"ksvc.yaml
            #cat kubernetes-helm/xxxxx-helm/values.yaml >> "$(eval echo charts/*/values.yaml)"
            sed -i '/namespace: /d' "$(eval echo charts/*/templates/)"jwt-secret.yaml
            #sed -i 's/"xxxxx/{{ template "fullname" . }}"/g' "$(eval echo charts/*/templates/_helpers.tpl)"           
            sed -i 's/wwwww\/xxxxx/"{{ .Values.image.repository }}:{{ .Values.image.tag }}"/g' "$(eval echo   charts/*/templates/)"*
            sed -i 's/wwwww/"{{ .Values.jxRequirements.cluster.registry }}"/g' "$(eval echo   charts/*/templates/)"*
            sed -i 's/xxxxx/{{ template "fullname" . }}/g' "$(eval echo charts/*/templates/)"*
            sed -i '/- name: SPRING_DATASOURCE_USERNAME/{n;/value: {{ template "fullname" . }}/{s/{{ template "fullname" . }}/xxxxx/;}}' "$(eval echo charts/*/templates/)"deployment.yaml
            sed -i 's/5432\/{{ template "fullname" . }}/5432\/xxxxx/;' "$(eval echo charts/*/templates/)"deployment.yaml  
            sed -i 's/yyyyy/{{ .Release.Namespace }}/g' "$(eval echo charts/*/templates/)"*
            sed -i 's/zzzzz/{{ .Values.jxRequirements.ingress.namespaceSubDomain }}{{ .Values.jxRequirements.ingress.domain }}/g' "$(eval echo charts/*/templates/)"*
            apt-get install -y xmlstarlet
            xmlstarlet ed -N x=http://maven.apache.org/POM/4.0.0 -s '/x:project/x:profiles/x:profile/x:build/x:plugins/x:plugin/x:executions/x:execution[x:id="npm install"]' -t elem -n configuration pom.xml | xmlstarlet ed -N x=http://maven.apache.org/POM/4.0.0 -s '/x:project/x:profiles/x:profile/x:build/x:plugins/x:plugin/x:executions/x:execution[x:id="npm install"]/x:configuration' -t elem -n arguments -v 'install --registry http://verdaccio:4873' | xmlstarlet ed -N x=http://maven.apache.org/POM/4.0.0 -d '/x:project/x:profiles/x:profile/x:build/x:plugins/x:plugin/x:executions/x:execution[x:id="npm install"]/x:configuration[position() !=1]' | xmlstarlet ed -N x=http://maven.apache.org/POM/4.0.0 -d '/x:project/x:profiles/x:profile/x:build/x:plugins/x:plugin/x:executions/x:execution[x:id="npm install"]/x:configuration/x:arguments[position() !=1]' | xmlstarlet ed -N x=http://maven.apache.org/POM/4.0.0 -u '/x:project/x:profiles/x:profile/x:build/x:plugins/x:plugin/x:executions/x:execution[x:id="npm install"]/x:configuration/x:arguments' -v 'install --registry http://verdaccio:4873' > pom.xml.backup
            mv pom.xml.backup pom.xml
            xmlstarlet ed -N x=http://maven.apache.org/POM/4.0.0 -s '/x:project/x:profiles/x:profile[x:id="api-docs"]' -t elem -n activation -v '' source/pom.xml| xmlstarlet ed -N x=http://maven.apache.org/POM/4.0.0 -s '/x:project/x:profiles/x:profile[x:id="api-docs"]/x:activation' -t elem -n activeByDefault -v 'true' > pom.xml.backup
            mv pom.xml.backup pom.xml
            #sed -i 's/contexts: prod/contexts: prod,faker/g' "src/main/resources/config/application-prod.yml"
        - image: maven:3.6-openjdk-11
          name: build-mvn-install
          resources: {}
          script: |
            #!/usr/bin/env bash
            source .jx/variables.sh
            #mvn compile liquibase:diff
            mvn --no-transfer-progress -Pprod,api-docs package  -DskipTests # for java jar run, set in pom.xml
        - name: check-registry
          resources: {}
        - name: build-container-build
          resources: {}
        - image: ghcr.io/jenkins-x-plugins/jx-preview:0.0.182
          name: promote-jx-preview
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            helm repo add test https://charts.helm.sh/stable
            jx preview create
            # lets make sure the git user name and email are setup for the commit to ensure we don't attribute this commit to random user
            #jx gitops git setup
            #git add --all
            # lets ignore commit errors in case there's no changes and to stop pipelines failing
            #git commit -m "chore: regenerated" -m "/pipeline cancel"
            #jx gitops pr push --ignore-no-pr  
        volumes:
        - name: npmrc
          secret:
              optional: true
              secretName: npmrc
        - name: maven-settings
          secret:
            secretName: jenkins-maven-settings
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
